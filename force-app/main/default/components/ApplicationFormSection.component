<apex:component id="applicationFormSectionComponent">
    <apex:actionFunction name="setCreatingNewRelatedRecordAF{!group.item.Id}" action="{!groupNewRelatedRecord}" rerender="theSection" onComplete="pageLoadReRendered();">
        <apex:param name="p1" assignTo="{!group.newReferenceObjectSelectedWrapper}" value=""/>
        <apex:param name="p2" assignTo="{!group.newReferenceObjectSelectedWrapperName}" value=""/>
    </apex:actionFunction>
    <apex:attribute name="appInfo" description="Application control and basic application information" type="EASYApplicationInfo" required="true" />
    <apex:attribute name="group" description="The ApplicationQuestionGroup for this section" type="ApplicationQuestionGroup" required="true"/>
    <apex:attribute name="preventUpdates" description="" type="Boolean" default="false" required="false"/>
    <apex:attribute name="appControl" description="ApplicationSettings" type="Application_Control__c" required="true"/>
    <apex:attribute name="groupNewRelatedRecord" description="" type="ApexPages.Action" required="true"/>
    <apex:attribute name="obj" description="" type="sObject" required="false"/>
    <apex:variable value="{!1}" var="placeholderUUID"/>
    <apex:outputPanel styleClass="{!if(group.isEditable,'','fieldNotEditable')}" id="theSection" layout="block">

        <apex:outputPanel rendered="{!group.instructions != null && group.instructions != ''}">
            <div class="slds-text-body_regular">
                <p>
                    <apex:outputText value="{!group.instructions}" escape="false"/>
                </p>
            </div>
        </apex:outputPanel>

        <apex:outputPanel rendered="{!group.isInternal && (group.response != null && group.response.Fulfilled_On__c != null)}">
            <div class="slds-text-body_regular">
                <p>
                    <apex:outputText value="Completed on {0, Date}.">
                        <apex:param value="{!group.response.Fulfilled_On__c}"/>
                    </apex:outputText>
                </p>
            </div>
        </apex:outputPanel>

        <apex:outputPanel rendered="{!group.isInternal && (group.response == null || group.response.Fulfilled_On__c == null)}">
            <div class="slds-text-body_regular">
                <p>This has not been completed.</p>
            </div>
        </apex:outputPanel>

        <apex:actionFunction name="sendTheReminder{!group.item.Id}" action="{!group.sendReminder}" reRender="none"/>


        <apex:outputPanel id="questionGroupWrapper" layout="block">
            <apex:outputPanel id="questionGroup" rendered="{!group.questionGroup && !group.isInternal}" layout="block">
                <apex:actionRegion >
                    <apex:repeat value="{!group.questions}" var="question">
                        <apex:variable value="{!placeholderUUID+1}" var="placeholderUUID"/>
                        <apex:outputPanel rendered="{!If(question.showQuestion, true, false)}" styleClass="slds-p-vertical_xxx-small slds-col slds-size_1-of-1 slds-large-size_12-of-12" layout="block">
                            <apex:outputPanel styleClass="{!IF(question.fieldType != 'Address', 'slds-form-element field-'+ question.fieldType,'')}" html-data-placeholder="{!IF(NOT(question.placeholder == null), question.placeholder, '' )}" html-data-maxlength="{!if(question.length == null || question.length > 255, 255, question.length)}" html-tabindex="{!placeholderUUID}">

                                {!question.dependentOptions}

                                <apex:variable var="readOnlyInput" value="{!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}"/>
                                <apex:variable var="requiredField" value="{!CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c)}" />
                                <apex:variable var="questionLabel" value="{!question.label}"/>

                                <!-- Label for input -->
                                <apex:outputPanel rendered="{!question.fieldType != 'Address' && !ISBLANK(question.label) && question.fieldType != 'Checkbox'}" layout="none">
                                    <label class="slds-form-element__label slds-p-vertical_x-small slds-text-body_regular">
                                        {!questionLabel}  (field type: {!question.fieldType} - 1st group, question required = {!question.question.Required__c}, app status = {!question.application.Application_Status__c})
                                        <apex:outputPanel rendered="{!requiredField}" layout="none">
                                            <abbr class='slds-required' title='required'>* </abbr>
                                        </apex:outputPanel>
                                    </label>
                                </apex:outputPanel>

                                <!--Text Box-->
                                <apex:outputPanel rendered="{!question.fieldType == 'Text'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputField id="textField" styleClass="slds-input {!readOnlyInput}" value="{!question.response.ValueText__c}"/>
                                </apex:outputPanel>

                                <!--Email-->
                                <apex:outputPanel rendered="{!question.fieldType == 'Email'}" layout="block" styleClass="slds-form-element__control slds-input-has-icon slds-input-has-icon_right">
                                    <svg class="slds-icon slds-input__icon slds-input__icon_right slds-icon-text-default" aria-hidden="true">
                                        <use xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, "assets/icons/utility-sprite/svg/symbols.svg#email")}"></use>
                                    </svg>
                                    <apex:inputField id="field" type="email" styleClass="slds-input {!readOnlyInput}" value="{!question.response.ValueText__c}"/>
                                    <apex:commandLink styleClass="btn-lightning" style="width:1%;display:table-cell;color:#{!appControl.Button_Text_Color__c};background-color:#{!appControl.Button_Color__c};" value="Send Reminder" onclick="appShowLoadingSpinner();sendTheReminder{!group.item.Id}();" oncomplete="appHideLoadingSpinner();pageLoadReRendered();" reRender="none" rendered="{!!preventUpdates && question.isEditable && question.question.External_Email_Field__c == true}"/>
                                </apex:outputPanel>

                                <!--Date Box-->
                                <apex:outputPanel rendered="{!question.fieldType == 'Date'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:input id="DateField" type="date" value="{!question.dateValue}" styleClass="slds-input {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!--Plain Picklist - no radio -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Picklist' && !question.radio}" layout="block" styleClass="slds-form-element__control">
                                    <div class="slds-select_container">
                                        <apex:selectList id="picklistField" onchange="reRenderAllGroups();" value="{!question.response.ValueText__c}" size="1" styleClass="slds-select {!readOnlyInput}">
                                            <apex:selectOptions value="{!question.options}"/>
                                        </apex:selectList>
                                    </div>
                                </apex:outputPanel>

                                <!-- Multi Picklist -->
                                <apex:outputPanel rendered="{!question.fieldType == 'MultiPicklist'}" layout="block" styleClass="slds-form-element__control">
                                    <div class="slds-checkbox">
                                        <apex:selectCheckboxes id="multiPicklistField" onchange="reRenderAllGroups();" value="{!question.multiPicklistValues}" layout="pageDirection" styleClass="slds-tabled-checklist {!readOnlyInput}">
                                            <apex:selectOptions value="{!question.options}"/>
                                        </apex:selectCheckboxes>
                                    </div>
                                </apex:outputPanel>

                                <!-- Multi Checkbox -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Checkbox'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:outputPanel layout="block" styleClass="slds-checkbox">
                                        <apex:inputCheckbox id="checkBoxField" onchange="reRenderAllGroups();" value="{!question.response.ValueCheckbox__c}" styleClass=" {!readOnlyInput}"/>
                                        <label class="slds-checkbox__label">
                                            <span class="slds-checkbox_faux"></span>
                                            <span class="slds-form-element__label">
                                                {!question.label}  (field type: {!question.fieldType} - 1st group)
                                            </span>
                                        </label>
                                    </apex:outputPanel>
                                </apex:outputPanel>

                                <!-- Reference -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Reference'}" layout="block" styleClass="slds-form-element__control">
                                    <div class="slds-select_container">
                                        <apex:selectList id="referenceField" value="{!question.response.ValueText__c}" size="1" styleClass="slds-select {!readOnlyInput}">
                                            <apex:selectOptions value="{!question.options}"/>
                                            <apex:actionSupport event="onchange" reRender="questionGroup"/>
                                        </apex:selectList>
                                    </div>
                                </apex:outputPanel>

                                <!-- TextEncrypted -->
                                <apex:outputPanel rendered="{!question.fieldType == 'TextEncrypted'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputSecret redisplay="true" id="textEncryptedField" value="{!question.textEncryptedValue}" styleClass="slds-input field-{!question.fieldType} {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!-- Currency -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Currency'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputField id="CurrencyField" value="{!question.response.ValueCurrency__c}" styleClass="slds-input {!readOnlyInput}" rendered="{!question.response != null}"/>
                                </apex:outputPanel>

                                <!-- Date Time -->
                                <apex:outputPanel rendered="{!question.fieldType == 'DateTime'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:input id="dateTimeField" type="datetime-local" value="{!question.datetimeValue}" styleClass="slds-input {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!-- Decimal Time -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Decimal' || question.fieldType == 'Integer' || question.fieldType == 'Number'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputField id="numberField" type="number" value="{!question.response.ValueNumber__c}" styleClass="slds-input {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!-- Percent -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Percent'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputField id="percentField" value="{!question.response.ValuePercent__c}" styleClass="slds-input {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!-- Phone -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Phone'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputField id="phoneField" type="tel" styleClass="slds-input {!readOnlyInput}" value="{!question.response.ValuePhone__c}"/>
                                </apex:outputPanel>

                                <!-- Picklist Radio -->
                                <apex:outputPanel rendered="{!(question.fieldType == 'Picklist' && question.radio) || question.fieldType == 'Radio'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:selectRadio id="radioField" onchange="reRenderAllGroups();" value="{!question.response.ValueText__c}" layout="pageDirection" styleClass="slds-radio {!readOnlyInput}">
                                        <apex:selectOptions value="{!question.options}"/>
                                    </apex:selectRadio>
                                </apex:outputPanel>

                                <!-- TextArea -->
                                <apex:outputPanel rendered="{!question.fieldType == 'TextArea'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputField id="textAreaField" value="{!question.response.ValueTextArea__c}" styleClass="slds-input {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!-- LongTextArea -->
                                <apex:outputPanel rendered="{!question.fieldType == 'LongTextArea'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputTextarea rows="10" value="{!question.response.ValueLongTextArea__c}" styleClass="slds-textarea {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!-- URL -->
                                <apex:outputPanel rendered="{!question.fieldType == 'URL'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:inputField id="urlField" type="url" value="{!question.response.ValueURL__c}" styleClass="slds-input {!readOnlyInput}"/>
                                </apex:outputPanel>

                                <!-- Static -->
                                <apex:outputPanel rendered="{!question.fieldType == 'Static'}" layout="block" styleClass="slds-form-element__control">
                                    <apex:outputText value="{!question.question.Static_Text__c}" escape="false"/>
                                </apex:outputPanel>

                                <apex:repeat value="{!['Street' = 'Street', 'City' = 'City', 'State/Province' = 'State/Province', 'Country' = 'Country', 'Postal Code' = 'Postal Code']}" var="inputType" rendered="{!question.fieldType == 'Address'}">
                                    <apex:outputPanel styleClass="slds-form-element field-{!question.fieldType}" html-data-placeholder="{!IF(NOT(question.placeholder == null), question.placeholder, '' )}" html-data-maxlength="{!if(question.length == null || question.length > 255, 255, question.length)}">
                                        <!-- Label for input -->
                                        <apex:outputPanel rendered="{!question.fieldType = 'Address' && !ISBLANK(question.label)}" layout="none">
                                            <label class="slds-form-element__label slds-p-vertical_x-small slds-text-body_regular">
                                                {!question.label}  {!inputType} (field type: {!question.fieldType} - Address Group)
                                                <apex:outputPanel rendered="{!CONTAINS(question.question.Required__c,question.application.Application_Status__c)}" layout="none">
                                                    <abbr class='slds-required' title='required'>* </abbr>
                                                </apex:outputPanel>
                                            </label>
                                        </apex:outputPanel>

                                        <apex:outputPanel styleClass="slds-form-element__control" layout="block">

                                            <apex:inputField id="street" value="{!question.response.Street__c}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'Street', true, false)}"/>

                                            <apex:inputField id="city" value="{!question.response.City__c}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'City', true, false)}"/>

                                            <apex:outputPanel rendered="{!!question.stateAndCountryPicklistEnabled}" layout="block">
                                                <apex:inputField id="state" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingStateCode','MailingState')]}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'State/Province', true, false)}"/>
                                                <apex:inputField id="country1" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingCountryCode','MailingCountry')]}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'Country', true, false)}"/>
                                            </apex:outputPanel>

                                            <apex:outputPanel rendered="{!question.stateAndCountryPicklistEnabled}" layout="block">
                                                <apex:outputPanel styleClass="slds-select_container" rendered="{!If(inputType = 'Country', true, false)}" layout="block">
                                                    <apex:inputField id="country" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingCountryCode','MailingCountry')]}" styleClass="slds-select {!readOnlyInput}"/>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="slds-select_container" rendered="{!If(inputType = 'State/Province', true, false)}" layout="block">
                                                    <apex:inputField id="statePicklist" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingStateCode','MailingState')]}" styleClass="slds-select {!readOnlyInput}"/>
                                                </apex:outputPanel>
                                            </apex:outputPanel>

                                            <apex:inputField id="postal" value="{!question.response.PostalCode__c}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'Postal Code', true, false)}"/>

                                        </apex:outputPanel>

                                    </apex:outputPanel>

                                    <!-- Error/Help text Description -->
                                    <apex:outputPanel layout="block" styleClass="slds-form-element__help">
                                        <apex:outputText value="{!question.helpText}" escape="false"/>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="none" rendered="{!!ISBLANK(question.helpText)}">
                                        <p class="help-block">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </apex:outputPanel>

                                </apex:repeat>

                            </apex:outputPanel>
                        </apex:outputPanel>
                    </apex:repeat>
                </apex:actionRegion>
            </apex:outputPanel>
        </apex:outputPanel>

        <apex:outputPanel rendered="{!group.documentUpload && !group.isInternal}" layout="none">

            <!-- Rich Text Editor text-->
            <apex:outputPanel styleClass="slds-form-element" rendered="{!group.item.Allow_Text_Entry__c && (!preventUpdates || group.isEditable)}">
                <apex:outputLabel styleClass="slds-form-element__label">Attachment</apex:outputLabel>
                <div class="slds-form-element__control">
                    <apex:inputTextarea richText="true" id="ckEditor" styleClass="ckeditor slds-textarea" value="{!group.response.ValueTextEntry__c}" rendered="{!group.item.Allow_Text_Entry__c && !preventUpdates}"/>
                    <script src="{!URLFOR($Resource.EasyAppResources, '/js/ckeditorConfig.js')}"></script>
                </div>
            </apex:outputPanel>

            <!-- Plain text if not edible but exists is displayed -->
            <apex:outputPanel styleClass="slds-form-element" rendered="{!group.item.Allow_Text_Entry__c && (preventUpdates || !group.isEditable)}">
                <apex:outputLabel styleClass="slds-form-element__label">Attachment</apex:outputLabel>
                <div class="slds-form-element__control">
                    <apex:outputText escape="false" value="{!group.response.ValueTextEntry__c}"/>
                </div>
            </apex:outputPanel>


            <!-- Upload file button and dropzone -->
            <apex:outputPanel styleClass="slds-form-element" rendered="{!!preventUpdates && group.isEditable}">
                <article class="slds-card slds-m-top_medium">
                    <div class="slds-card__header slds-grid">
                        <header class="slds-media slds-media_center slds-has-flexi-truncate">
                            <div class="slds-media__figure">
                                <span class="slds-icon_container slds-icon-standard-account" title="Upload file">
                                  <svg class="slds-icon slds-icon_small" aria-hidden="true">
                                    <use xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, "assets/icons/standard-sprite/svg/symbols.svg#file")}"></use>
                                  </svg>
                                  <span class="slds-assistive-text">Upload file</span>
                                </span>
                            </div>
                            <div class="slds-media__body">
                                <h2 class="slds-card__header-title">
                                    <a href="#" class="slds-card__header-link slds-truncate" title="Upload file">
                                        <span>Upload file</span>
                                    </a>
                                </h2>
                            </div>
                        </header>
                    </div>
                    <div class="slds-card__body slds-card__body_inner">
                        <p class="slds-text-body_large slds-m-top_small slds-m-bottom_medium"><strong>Previously uploaded:</strong> {!IF(!ISBLANK(group.att.Title),group.att.Title, 'None')}</p>
                        <div class="slds-form-element__control">
                            <div class="slds-file-selector slds-file-selector_files" style="width:100%;">
                                <div class="slds-file-selector__dropzone slds-var-p-around_large" style="width:100%;">
                                    <input class="docUploadInput slds-file-selector__input slds-assistive-text" data-respid="{!group.item.Id}" type="file" aria-labelledby="file-selector-primary-label file-selector-secondary-label"/>
                                    <label class="slds-file-selector__body" for="file-upload-input-01" id="file-selector-secondary-label">
                                        <span class="slds-file-selector__button slds-button slds-button_neutral">
                                            <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                <use xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, "assets/icons/utility-sprite/svg/symbols.svg#upload")}"></use>
                                            </svg>
                                            Upload Files
                                        </span>
                                        <span class="slds-file-selector__text slds-medium-show">or Drop Files</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <p class="slds-text-body_medium slds-m-top_small currentlySelectedFile"><strong>Currently Selected:</strong> None</p>
                        <p class="slds-text-body_medium slds-m-top_small currentlySelectedFile"><em>Currently selected files will be uploaded once the "Save and Continue" button at the end of this grouping.</em></p>
                        <apex:outputPanel styleClass="slds-form-element" rendered="{!(preventUpdates || !group.isEditable) && NOT(ISBLANK(group.oldAttVersion.Id))}">
                            <apex:outputLabel value="Previously Uploaded Document: "/>
                            <apex:outputLink value="/sfc/servlet.shepherd/version/download/{!group.oldAttVersion.Id}" target="_blank">{!group.att.Title}</apex:outputLink>
                        </apex:outputPanel>
                    </div>
                </article>
            </apex:outputPanel>

        </apex:outputPanel>

        <apex:outputPanel rendered="{!group.relatedObject && !group.isInternal}" layout="block" styleClass="slds-card">

            <apex:outputPanel styleClass="slds-card__header slds-grid" layout="block">
                <header class="slds-media slds-media_center slds-has-flexi-truncate">
                    <div class="slds-media__figure">
                        <span class="slds-icon_container slds-icon-standard-account" title="account">
                          <svg class="slds-icon slds-icon_small" aria-hidden="true">
                            <use xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, "assets/icons/standard-sprite/svg/symbols.svg#account")}"></use>
                          </svg>
                          <span class="slds-assistive-text">{!IF(ISBLANK(group.item.Label__c), group.item.Name, group.item.Label__c)}</span>
                        </span>
                    </div>
                    <div class="slds-media__body">
                        <h2 class="slds-card__header-title">
                            <a href="#" class="slds-card__header-link slds-truncate" title="{!IF(ISBLANK(group.item.Label__c), group.item.Name, group.item.Label__c)}">
                                <span>{!IF(ISBLANK(group.item.Label__c), group.item.Name, group.item.Label__c)}</span>
                            </a>
                        </h2>
                    </div>
                </header>
            </apex:outputPanel>

            <apex:actionFunction name="rerenderTheTable" rerender="theTable" onComplete="pageLoadReRendered();"/>
            <apex:outputPanel id="theTable" rendered="{!group.creatingNewRelatedRecord == false}">

                <apex:pageMessages />

                <apex:outputPanel rendered="{!group.relatedObjects.size == 0}" layout="block" styleClass="slds-card__body slds-card__body_inner">
                    <p>You haven"t created any records yet. Click "New Record" to create one.</p>
                </apex:outputPanel>

                <apex:outputPanel rendered="{!CONTAINS(group.item.Required__c, group.app.Application_Status__c) && group.item.Required_Number_of_Children__c != null && group.item.Required_Number_of_Children__c > 0}" layout="block" styleClass="slds-card__body slds-card__body_inner">
                    <p>At least {!group.item.Required_Number_of_Children__c} record{!IF(group.item.Required_Number_of_Children__c > 1, 's are', ' is')} required.</p>
                </apex:outputPanel>

                <apex:outputPanel rendered="{!group.relatedObjects.size > 0}">

                    <apex:repeat value="{!group.relatedObjects}" var="rr">
                        <apex:outputPanel html-data-recid="{!rr.idx}" layout="block" styleClass=" record-id slds-card__body slds-card__body_inner">

                            <apex:repeat value="{!group.questions}" var="question">

                                <apex:outputPanel rendered="{!rr.showQuestions[question]}" layout="block">

                                    <apex:outputPanel layout="block" rendered="{!!rr.isEditMode}">
                                        <apex:outputLabel for="appReferenceField" styleClass="slds-text-body_regular" value="{!question.question.Label__c}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}"/>
                                        <apex:outputPanel layout="block" styleClass="slds-m-bottom_small" id="appReferenceField">
                                            <apex:outputField value="{!rr.obj[IF(NOT(ISBLANK(rr.obj['Holding_Name__c'])),'Holding_Name__c',question.question.Related_Object_Field__c)]}" style="{!IF(rr.isEditMode,'display:none;','')}" rendered="{!question.question.Related_Object_Field__c != null && group.fieldResultMap[lower(question.question.Related_Object_Field__c)].isReference}"/>
                                            <apex:outputField value="{!rr.obj[question.question.Related_Object_Field__c]}" rendered="{!!rr.isEditMode && question.question.Related_Object_Field__c != null && !group.fieldResultMap[lower(question.question.Related_Object_Field__c)].isReference}"/>
                                        </apex:outputPanel>
                                    </apex:outputPanel>

                                    <apex:outputPanel id="editQuestion" rendered="{!rr.isEditMode}" layout="block" styleClass="slds-p-vertical_xx-small slds-col slds-size_1-of-1 slds-large-size_12-of-12">

                                        <apex:variable value="{!placeholderUUID+1}" var="placeholderUUID"/>
                                        <apex:variable value="{!IF(question.question.Id == null, 'label' + TEXT(placeholderUUID), question.question.id)}" var="qId"/>
                                        <apex:variable value="{!CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c)}" var="requiredField"/>

                                        <apex:outputPanel styleClass="slds-form-element field-{!question.fieldType}" html-data-placeholder="{!IF(NOT(question.placeholder == null), question.placeholder, '' )}" html-data-maxlength="{!if(question.length == null || question.length > 255, 255, question.length)}" layout="block">

                                            <apex:variable value="{!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" var="readOnlyInput"/>

                                            <!-- Label for input -->
                                            <apex:outputPanel rendered="{!question.fieldType != 'Address' && question.fieldType != 'Checkbox'}" layout="none">
                                                <label class="slds-form-element__label this_label_1 slds-p-vertical_x-small slds-text-body_regular">
                                                    {!question.label}  (field type: {!question.fieldType} - 2nd group - question required = {!question.question.Required__c}, app status = {!question.application.Application_Status__c})
                                                    <apex:outputPanel rendered="{!requiredField}" layout="none">
                                                        <abbr class='slds-required' title='required'>* </abbr>
                                                    </apex:outputPanel>
                                                </label>
                                            </apex:outputPanel>

                                            <!-- Multi Checkbox -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Checkbox'}" layout="block" styleClass="slds-form-element__control">
                                                <div class="slds-checkbox">
                                                    <apex:inputCheckbox id="checkBoxField1" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass=" {!qId} {!readOnlyInput}"/>
                                                </div>
                                            </apex:outputPanel>

                                            <!-- Currency -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Currency'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="CurrencyField1" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} {!readOnlyInput}" rendered="{!NOT(ISBLANK(question.question.Related_Object_Field__c)) && NOT(ISBLANK(rr.obj))}"/>
                                            </apex:outputPanel>

                                            <!--Date Box-->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Date'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="DateField1" type="date" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} {!readOnlyInput}"/>
                                            </apex:outputPanel>

                                            <!-- Date Time -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'DateTime'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="dateTimeField1" type="datetime-local" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} {!readOnlyInput}"/>
                                            </apex:outputPanel>

                                            <!-- Decimal -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Decimal' || question.fieldType == 'Integer' || question.fieldType == 'Number'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="numberField1" type="number" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} {!readOnlyInput}"/>
                                            </apex:outputPanel>

                                            <!--Email-->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Email'}" layout="block" styleClass="slds-form-element__control slds-input-has-icon slds-input-has-icon_right">
                                                <svg class="slds-icon slds-input__icon slds-input__icon_right slds-icon-text-default" aria-hidden="true">
                                                    <use xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, "assets/icons/utility-sprite/svg/symbols.svg#email")}"></use>
                                                </svg>
                                                <apex:inputField id="field1" type="email" styleClass="slds-input {!qId} {!readOnlyInput}" value="{!rr.obj[question.question.Related_Object_Field__c]}"/>
                                                <apex:commandLink styleClass="btn-lightning" style="width:1%;display:table-cell;color:#{!appControl.Button_Text_Color__c};background-color:#{!appControl.Button_Color__c};" value="Send Reminder" onclick="appShowLoadingSpinner();sendTheReminder{!group.item.Id}();" oncomplete="appHideLoadingSpinner();pageLoadReRendered();" reRender="none" rendered="{!!preventUpdates && question.isEditable && question.question.External_Email_Field__c == true}"/>
                                            </apex:outputPanel>

                                            <!-- TextEncrypted -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'TextEncrypted'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputSecret redisplay="true" id="textEncryptedField" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} field-{!question.fieldType} {!readOnlyInput}"/>
                                            </apex:outputPanel>

                                            <!-- Multi Picklist -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'MultiPicklist'}" layout="block" styleClass="slds-form-element__control">
                                                <div class="slds-checkbox">
                                                    <apex:selectCheckboxes id="multiPicklistField1" value="{!rr.multiPicklistValues[question.question.Related_Object_Field__c].multiPicklistValues}" layout="pageDirection" styleClass="slds-tabled-checklist {!readOnlyInput}">
                                                        <apex:selectOptions value="{!question.options}"/>
                                                        <apex:actionSupport event="onchange" reRender="theTable" onSubmit="showFormSpinner();" onComplete="hideFormSpinner();"/>
                                                    </apex:selectCheckboxes>
                                                </div>
                                            </apex:outputPanel>

                                            <!-- Percent -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Percent'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="percentField1" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} {!readOnlyInput}"/>
                                            </apex:outputPanel>

                                            <!-- Phone -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Phone'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="phoneField1" type="tel" styleClass="slds-input {!qId} {!readOnlyInput}" value="{!rr.obj[question.question.Related_Object_Field__c]}"/>
                                            </apex:outputPanel>

                                            <!--Plain Picklist - no radio -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Picklist' && !question.radio}" layout="block" styleClass="slds-form-element__control">
                                                {!rr.obj[question.question.Related_Object_Field__c]}
                                                <div class="slds-select_container">
                                                    <apex:selectList id="picklistField1" value="{!rr.obj[question.question.Related_Object_Field__c]}" size="1" styleClass="slds-select {!qId} {!readOnlyInput}">
                                                        <apex:selectOptions value="{!question.options}"/>
                                                        <apex:actionSupport event="onchange" reRender="theTable" onBeforeDomUpdate="showFormSpinner();" onComplete="hideFormSpinner();pageLoadReRendered();"/>
                                                    </apex:selectList>
                                                </div>
                                            </apex:outputPanel>

                                            <!-- Picklist Radio -->
                                            <apex:outputPanel rendered="{!(question.fieldType == 'Picklist' && question.radio) || question.fieldType == 'Radio'}" layout="block" styleClass="slds-form-element__control">
                                                <div class="slds-form-element__control">
                                                    <div class="slds-radio_button-group">
                                                        <apex:variable var="num" value="{!0}"/>
                                                        <apex:repeat var="radioQuestion" value="{!question.options}">
                                                            <apex:variable var="num" value="{!num + 1}"/>
                                                            <span class="slds-button slds-radio_button" data-radiovalue="{!radioQuestion.value}">
                                                            <input type="radio" name="radio-group-{!qId}" id="radio-group-{!qId}-{!num}" value="{!radioQuestion.value}" class="faux-radio-value"/>
                                                            <label class="slds-radio_button__label this" for="radio-group-{!qId}-{!num}">
                                                              <span class="slds-radio_faux">{!radioQuestion.label}</span>
                                                            </label>
                                                        </span>
                                                        </apex:repeat>
                                                        <apex:inputHidden value="{!rr.obj[question.question.Related_Object_Field__c]}" id="radioField1"/>
                                                    </div>
                                                </div>
                                            </apex:outputPanel>

                                            <apex:outputPanel rendered="{!question.fieldType == 'Reference'}" layout="block" styleClass="referenceLookup">
                                                <!-- HERE 26-->
                                                <apex:outputPanel rendered="{!question.question.New_Reference_Field__c == false}" layout="block">
                                                    <div class="slds-form-element__control">
                                                        <div class="slds-combobox_container">
                                                            <div class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click" aria-expanded="false" aria-haspopup="listbox" role="combobox"
                                                                 data-objtype="{!question.question.Lookup_Object__c}"
                                                                 data-objtypefilter="{!question.question.Lookup_Where_Clause__c}"
                                                                 data-objtypenamefield="{!question.question.Name_Field_API_Name__c}"
                                                                 data-listicon="{!URLFOR($Asset.SLDS, 'assets/icons/standard-sprite/svg/symbols.svg#account')}"
                                                                 data-groupitemid="{!group.Item.Id}"
                                                            >
                                                                <div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right" role="none">
                                                                    <apex:inputText value="{!rr.obj['Holding_Name__c']}"
                                                                                    id="combobox"
                                                                                    styleClass="bind-autocomplete slds-input slds-combobox__input"
                                                                                    html-autocomplete="off" html-role="textbox" html-aria-autocomplete="list"
                                                                    />
                                                                    <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right refRemoveButton" title="Remove selected option" style="display:none;">
                                                                        <svg class="slds-button__icon" aria-hidden="true">
                                                                            <use xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                                                        </svg>
                                                                        <span class="slds-assistive-text">Remove selected option</span>
                                                                    </button>
                                                                    <span class="slds-icon_container slds-icon-utility-search slds-input__icon slds-input__icon_right refMagGlass">
                                                                          <svg class="slds-icon slds-icon slds-icon_x-small slds-icon-text-default " aria-hidden="true">
                                                                            <use xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#search')}"></use>
                                                                          </svg>
                                                                    </span>
                                                                </div>
                                                                <div class="slds-dropdown slds-dropdown_length-with-icon-7 slds-dropdown_fluid" role="listbox">
                                                                    <ul class="slds-listbox slds-listbox_vertical" role="presentation">
                                                                    </ul>
                                                                </div>
                                                            </div>
                                                            <apex:inputHidden html-class="inputHidden" value="{!rr.obj[question.question.Related_Object_Field__c]}"/>
                                                        </div>
                                                    </div>

                                                </apex:outputPanel>

                                                <apex:inputField value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="form-control" rendered="{!question.question.New_Reference_Field__c == true}"/>

                                            </apex:outputPanel>

                                            <!-- Static -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Static'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:outputText value="{!question.question.Static_Text__c}" escape="false"/>
                                            </apex:outputPanel>

                                            <!--Text Box-->
                                            <apex:outputPanel rendered="{!question.fieldType == 'Text'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="textField1" styleClass="slds-input {!qId} {!readOnlyInput}" value="{!rr.obj[question.question.Related_Object_Field__c]}"/>
                                            </apex:outputPanel>

                                            <!-- TextArea -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'TextArea'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="textAreaField1" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} {!readOnlyInput}"/>
                                            </apex:outputPanel>

                                            <!-- LongTextArea -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'LongTextArea'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputTextarea rows="10" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-textarea {!qId} {!readOnlyInput}"/>
                                            </apex:outputPanel>

                                            <!-- URL -->
                                            <apex:outputPanel rendered="{!question.fieldType == 'URL'}" layout="block" styleClass="slds-form-element__control">
                                                <apex:inputField id="urlField1" type="url" value="{!rr.obj[question.question.Related_Object_Field__c]}" styleClass="slds-input {!qId} {!readOnlyInput}"/>
                                            </apex:outputPanel>


                                            <apex:repeat value="{!['Street' = 'Street', 'City' = 'City', 'State/Province' = 'State/Province', 'Country' = 'Country', 'Postal Code' = 'Postal Code']}" var="inputType" rendered="{!question.fieldType == 'Address'}">
                                                <apex:outputPanel styleClass="slds-form-element field-{!question.fieldType}" html-data-placeholder="{!IF(NOT(question.placeholder == null), question.placeholder, '' )}" html-data-maxlength="{!if(question.length == null || question.length > 255, 255, question.length)}">
                                                    <!-- Label for input -->
                                                    <apex:outputPanel rendered="{!question.fieldType = 'Address' && !ISBLANK(question.label)}" layout="none">
                                                        <label class="slds-form-element__label slds-p-vertical_x-small slds-text-body_regular">
                                                            {!question.label}  {!inputType} (field type: {!question.fieldType} - Address Group #2)
                                                            <apex:outputPanel rendered="{!CONTAINS(question.question.Required__c,question.application.Application_Status__c)}" layout="none">
                                                                <abbr class='slds-required' title='required'>* </abbr>
                                                            </apex:outputPanel>
                                                        </label>
                                                    </apex:outputPanel>

                                                    <apex:outputPanel styleClass="slds-form-element__control" layout="block">

                                                        <apex:inputField id="street" value="{!question.response.Street__c}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'Street', true, false)}"/>

                                                        <apex:inputField id="city" value="{!question.response.City__c}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'City', true, false)}"/>

                                                        <apex:outputPanel rendered="{!!question.stateAndCountryPicklistEnabled}" layout="block">
                                                            <apex:inputField id="state" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingStateCode','MailingState')]}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'State/Province', true, false)}"/>
                                                            <apex:inputField id="country1" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingCountryCode','MailingCountry')]}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'Country', true, false)}"/>
                                                        </apex:outputPanel>

                                                        <apex:outputPanel rendered="{!question.stateAndCountryPicklistEnabled}" layout="block">
                                                            <apex:outputPanel styleClass="slds-select_container" rendered="{!If(inputType = 'Country', true, false)}" layout="block">
                                                                <apex:inputField id="country" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingCountryCode','MailingCountry')]}" styleClass="slds-select {!readOnlyInput}"/>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleClass="slds-select_container" rendered="{!If(inputType = 'State/Province', true, false)}" layout="block">
                                                                <apex:inputField id="statePicklist" value="{!question.con[IF(question.stateAndCountryPicklistEnabled,'MailingStateCode','MailingState')]}" styleClass="slds-select {!readOnlyInput}"/>
                                                            </apex:outputPanel>
                                                        </apex:outputPanel>

                                                        <apex:inputField id="postal" value="{!question.response.PostalCode__c}" styleClass="slds-input {!readOnlyInput}" rendered="{!If(inputType = 'Postal Code', true, false)}"/>

                                                    </apex:outputPanel>

                                                </apex:outputPanel>

                                                <!-- Error/Help text Description -->
                                                <apex:outputPanel layout="block" styleClass="slds-form-element__help">
                                                    <apex:outputText value="{!question.helpText}" escape="false"/>
                                                </apex:outputPanel>
                                                <apex:outputPanel layout="none" rendered="{!!ISBLANK(question.helpText)}">
                                                    <p class="help-block">
                                                        <apex:outputText value="{!question.helpText}" escape="false"/>
                                                    </p>
                                                </apex:outputPanel>

                                            </apex:repeat>


                                            <!--
                                                                                   <apex:outputPanel rendered="{!question.fieldType == 'Address'}">
                                                                                       HERE 12
                                                                                       <div class="form-group">
                                                                                           <label for="street1">{!question.label} Street{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                                                                           <apex:inputField id="street1" value="{!rr.obj[SUBSTITUTE(question.question.Related_Object_Field__c,'Address','Street')]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}"/>
                                                                                       </div>

                                                                                       <div class="form-group">
                                                                                           <label for="city1">{!question.label} City{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                                                                           <apex:inputField id="city1" value="{!rr.obj[SUBSTITUTE(question.question.Related_Object_Field__c,'Address','City')]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}"/>
                                                                                       </div>
                                                                                       <apex:outputPanel rendered="{!!question.stateAndCountryPicklistEnabled}">
                                                                                           HERE 2
                                                                                           <div class="form-group">
                                                                                               <label for="state1">{!question.label} State{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                                                                               <div class="statePicklist {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}">
                                                                                                   <apex:inputField id="state1" value="{!rr.obj[SUBSTITUTE(question.question.Related_Object_Field__c,'Address',IF(question.stateAndCountryPicklistEnabled,'StateCode','State'))]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}"/>
                                                                                               </div>
                                                                                           </div>
                                                                                       </apex:outputPanel>
                                                                                       <div class="form-group">
                                                                                           HERE 3
                                                                                           <label for="country1">{!question.label} Country{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                                                                           <apex:inputField id="country1" value="{!rr.obj[SUBSTITUTE(question.question.Related_Object_Field__c,'Address',IF(question.stateAndCountryPicklistEnabled,'CountryCode','Country'))]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}"/>
                                                                                       </div>

                                                                                       <apex:outputPanel rendered="{!question.stateAndCountryPicklistEnabled}">
                                                                                           <div class="form-group">
                                                                                               HERE 4
                                                                                               <label for="state1Picklist">{!question.label} State{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                                                                               <div class="statePicklist {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}">
                                                                                                   <apex:inputField id="state1Picklist1" value="{!rr.obj[SUBSTITUTE(question.question.Related_Object_Field__c,'Address',IF(question.stateAndCountryPicklistEnabled,'StateCode','State'))]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}"/>
                                                                                               </div>
                                                                                           </div>
                                                                                       </apex:outputPanel>

                                                                                       <div class="form-group">
                                                                                           <label for="postal1">{!question.label} Postal Code{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                                                                           <apex:inputField id="postal1" value="{!rr.obj[SUBSTITUTE(question.question.Related_Object_Field__c,'Address','PostalCode')]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}"/>
                                                                                       </div>

                                                                                   </apex:outputPanel>
                                       -->
                                            <!-- Error Description -->
                                            <div class="slds-form-element__help" id="error-message-{!qId}">
                                                <apex:outputText value="{!question.helpText}" escape="false"/>
                                            </div>
                                            <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                                <apex:outputText value="{!question.helpText}" escape="false"/>
                                            </p>

                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:repeat>
                        </apex:outputPanel>

                        <apex:outputPanel rendered="{!rr.obj['User_Created__c'] && !rr.isEditMode && !preventUpdates && group.isEditable}" layout="block" styleClass="slds-card__footer slds-border_top slds-align_absolute-center">
                            <apex:commandLink action="{!group.enableEditMode}" reRender="theTable" value="Edit" onClick="showFormSpinner()" onComplete="pageLoadReRendered();" styleClass="slds-button slds-button_neutral slds-m-right-small">
                                <apex:param name="p1" value="{!rr.idx}" assignTo="{!group.selectedRelatedId}"/>
                            </apex:commandLink>
                            <apex:commandLink action="{!group.enableDeleteMode}" reRender="theTable" value="Delete" onClick="showFormSpinner()" onComplete="pageLoadReRendered();" styleClass="slds-button slds-button_neutral">
                                <apex:param name="p1" value="{!rr.idx}" assignTo="{!group.selectedRelatedId}"/>
                            </apex:commandLink>
                        </apex:outputPanel>

                        <apex:outputPanel rendered="{!rr.obj['User_Created__c'] && rr.isEditMode}" layout="block" styleClass="slds-card__footer slds-border_top slds-align_absolute-center">
                            <apex:commandLink action="{!group.enableConfirmMode}" reRender="theTable" value="Ok" onClick="showFormSpinner()" styleClass="slds-button slds-button_neutral slds-m-right-small" onComplete="pageLoadReRendered();">
                                <apex:param name="p1" value="{!rr.idx}" assignTo="{!group.selectedRelatedId}"/>
                            </apex:commandLink>
                            <apex:commandLink action="{!group.enableViewMode}" reRender="theTable" value="Cancel" onClick="showFormSpinner()" styleClass="slds-button slds-button_neutral" onComplete="pageLoadReRendered();">
                                <apex:param name="p1" value="{!rr.idx}" assignTo="{!group.selectedRelatedId}"/>
                            </apex:commandLink>
                        </apex:outputPanel>

                        <apex:outputPanel rendered="{!(ISPICKVAL($User.UserType,'Standard') || group.item.Allow_Supporting_Documentation_Upload__c) && rr.idx != null}">
                            <apex:outputLink value="/{!rr.att.ContentDocumentId}" rendered="{!rr.att != null && ISPICKVAL($User.UserType,'Standard')}" target="_blank">View Uploaded Document
                            </apex:outputLink>
                            <apex:outputText value="Previously Uploaded Document: {!rr.att.ContentDocument.Title}" rendered="{!rr.att != null && NOT(ISPICKVAL($User.UserType,'Standard'))}"/>
                        </apex:outputPanel>

                        <apex:outputPanel rendered="{!(ISPICKVAL($User.UserType,'Standard') || group.item.Allow_Supporting_Documentation_Upload__c) && rr.idx != null && !rr.isEditMode && group.isEditable && !preventUpdates}">
                            <apex:commandLink action="{!group.RelatedUpload}" reRender="theTable" oncomplete="if('{!group.selectedRelatedId}')window.open('{!$Page.RelatedDocumentUpload+'?Id='+group.selectedRelatedId+'&rId='+group.item.Id}','_blank');pageLoadReRendered();">Upload Supporting Documentation
                                <apex:param name="p1" value="{!rr.idx}" assignTo="{!group.selectedRelatedId}"/>
                            </apex:commandLink>
                        </apex:outputPanel>
                    </apex:repeat>

                </apex:outputPanel>

                <apex:outputPanel rendered="{!!preventUpdates && group.isEditable && (group.item.Maximum_Number_of_Children__c == null || group.relatedObjects.size < group.item.Maximum_Number_of_Children__c)}" layout="block" styleClass="slds-card__footer slds-border_top slds-align_absolute-center">
                    <apex:commandLink styleClass="slds-button slds-button_neutral" value="New Record" onClick="showFormSpinner();" action="{!group.newRow}" onComplete="pageLoadReRendered();" reRender="theTable"/>
                </apex:outputPanel>

            </apex:outputPanel>

            <apex:outputPanel id="newRelatedRecord" rendered="{!group.creatingNewRelatedRecord == true}" layout="block">

                <apex:pageMessages />

                <apex:repeat value="{!group.relatedReferenceQuestions}" var="question">
                    {!question.showQuestion}
                    <apex:outputPanel rendered="{!question.showQuestion}" layout="none">

                        <apex:outputPanel rendered="{!question.showQuestion}">

                            <apex:variable value="{!placeholderUUID+1}" var="placeholderUUID"/>
                            <apex:variable value="{!IF(question.question.Id == null, 'label' + TEXT(placeholderUUID), question.question.id)}" var="qId"/>

                            <div class="slds-form-element slds-p-vertical_xx-small field-{!question.fieldType}">

                                <apex:outputPanel rendered="{!question.fieldType == 'Address'}">
                                    <div class="form-group">
                                        <label for="street1">{!question.label} Street{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField id="street1" value="{!group.newReferenceObject[SUBSTITUTE(question.question.Related_Object_Field__c,'Address','Street')]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;resize:none;"/>
                                    </div>

                                    <div class="form-group">
                                        <label for="city1">{!question.label} City{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField id="city1" value="{!group.newReferenceObject[SUBSTITUTE(question.question.Related_Object_Field__c,'Address','City')]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;"/>
                                    </div>

                                    <apex:outputPanel rendered="{!!question.stateAndCountryPicklistEnabled}">
                                        <div class="form-group">
                                            <label for="state1">{!question.label} State{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                            <div class="statePicklist {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}">
                                                <apex:inputField id="state1" value="{!group.newReferenceObject[SUBSTITUTE(question.question.Related_Object_Field__c,'Address',IF(question.stateAndCountryPicklistEnabled,'StateCode','State'))]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;"/>
                                            </div>
                                        </div>
                                    </apex:outputPanel>

                                    <div class="form-group">
                                        <label for="country1">{!question.label} Country{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField id="country1" value="{!group.newReferenceObject[SUBSTITUTE(question.question.Related_Object_Field__c,'Address',IF(question.stateAndCountryPicklistEnabled,'CountryCode','Country'))]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;"/>
                                    </div>

                                    <apex:outputPanel rendered="{!question.stateAndCountryPicklistEnabled}">
                                        <div class="form-group">
                                            <label for="state1Picklist">{!question.label} State{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                            <div class="statePicklist {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}">
                                                <apex:inputField id="state1Picklist" value="{!group.newReferenceObject[SUBSTITUTE(question.question.Related_Object_Field__c,'Address',IF(question.stateAndCountryPicklistEnabled,'StateCode','State'))]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;"/>
                                            </div>
                                        </div>
                                    </apex:outputPanel>

                                    <div class="form-group">
                                        <label for="postal1">{!question.label} Postal Code{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField id="postal1" value="{!group.newReferenceObject[SUBSTITUTE(question.question.Related_Object_Field__c,'Address','PostalCode')]}" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;"/>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Checkbox'}">
                                    <div class="checkbox">
                                        <label for="field1">
                                            <apex:inputCheckbox id="checkBoxField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="{!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}">
                                                <apex:actionSupport event="onchange" reRender="newRelatedRecord"/>
                                            </apex:inputCheckbox>
                                        </label>
                                        {!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Currency'}">
                                    <div class="form-group">
                                        <label for="CurrencyField">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><em class="glyphicon glyphicon-usd"></em></span>
                                            <apex:inputField id="CurrencyField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;" rendered="{!NOT(ISBLANK(question.question.Related_Object_Field__c)) && NOT(ISBLANK(group.newReferenceObject))}"/>
                                        </div>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Date'}">
                                    <div class="form-group">
                                        <label for="DateField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><em class="glyphicon glyphicon-calendar"></em></span>
                                            <apex:inputField id="DateField1" type="auto" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        </div>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'DateTime'}">
                                    <div class="form-group">
                                        <label for="dateTimeField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><em class="glyphicon glyphicon-time"></em></span>
                                            <apex:inputField id="dateTimeField1" type="auto" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        </div>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Decimal' || question.fieldType == 'Integer' || question.fieldType == 'Number'}">
                                    <div class="form-group">
                                        <label for="numberField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField type="auto" id="numberField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Email'}">
                                    <div class="form-group">
                                        <label for="field1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><em class="glyphicon glyphicon-envelope"></em></span>
                                            <apex:inputField id="field1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        </div>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>

                                <apex:outputPanel rendered="{!question.fieldType == 'TextEncrypted'}">
                                    <div class="form-group">
                                        <label for="textEncryptedField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputSecret redisplay="true" id="textEncryptedField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" maxlength="{!if(question.length == null || question.length > 175, 175, question.length)}" styleClass="form-control {!question.question.Id} field-{!question.fieldType}{!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#676767;font-weight:400;font-size:14px;height:36px;"/>
                                    </div>
                                    <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                        <apex:outputText value="{!question.helpText}" escape="false"/>
                                    </p>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'MultiPicklist'}">
                                    <div class="form-group">
                                        <label for="multiPicklistField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:selectCheckboxes id="multiPicklistField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" layout="pageDirection" styleClass="selectCheckboxes {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;">
                                            <apex:selectOptions value="{!question.options}"/>
                                            <apex:actionSupport event="onchange" reRender="questionGroup"/>
                                        </apex:selectCheckboxes>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>

                                <apex:outputPanel rendered="{!question.fieldType == 'Percent'}">
                                    <div class="form-group">
                                        <label for="percentField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <div class="input-group">
                                            <span class="input-group-addon">%</span>
                                            <apex:inputField id="percentField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        </div>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Phone'}">
                                    <div class="form-group">
                                        <label for="phoneField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><em class="glyphicon glyphicon-earphone"></em></span>
                                            <apex:inputField id="phoneField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        </div>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Picklist' && !question.radio}">
                                    <div class="form-group">
                                        <label for="picklistField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c),'*','')}</label>
                                        <apex:selectList id="picklistField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" size="1" styleClass="form-control {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;">
                                            <apex:selectOptions value="{!question.options}"/>
                                            <apex:actionSupport event="onchange" reRender="questionGroup"/>
                                        </apex:selectList>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!(question.fieldType == 'Picklist' && question.radio) || question.fieldType == 'Radio'}">
                                    <div class="form-group">
                                        <label for="radioField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:selectRadio id="radioField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" layout="pageDirection" styleClass="selectRadio {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;">
                                            <apex:selectOptions value="{!question.options}"/>
                                            <apex:actionSupport event="onchange" reRender="questionGroup"/>
                                        </apex:selectRadio>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>

                                {!question.fieldType}
                                <apex:outputPanel rendered="{!question.fieldType == 'Reference'}">
                                    <div class="form-group">
                                        <label for="referenceField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:outputPanel rendered="{!question.question.New_Reference_Field__c == false}">
                                            <input data-objtype="{!question.question.Lookup_Object__c}" data-objtypefilter="{!question.question.Lookup_Where_Clause__c}" data-objtypenamefield="{!question.question.Name_Field_API_Name__c}" placeholder="{!question.placeholder}" class="form-control bind-autocomplete" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                            <apex:inputHidden html-class="inputHidden" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}"/>
                                            <apex:outputPanel styleClass="lookupPanel" style="display:none" layout="block">
                                                <apex:outputField value="{!group.newReferenceObject[IF(AND(question.question.New_Reference_Field__c == false,NOT(ISBLANK(group.newReferenceObject['Holding_Name__c']))),'Holding_Name__c',question.question.Related_Object_Field__c)]}"/>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                        <apex:inputField value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control" rendered="{!question.question.New_Reference_Field__c == true}"/>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Static'}">
                                    <div class="form-group">
                                        <label for="field" rendered="{!NOT(ISBLANK(question.label))}">{!question.label}</label>
                                        <p>
                                            <apex:outputText value="{!question.question.Static_Text__c}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'Text'}">
                                    <div class="form-group">
                                        <label for="textField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField type="auto" id="textField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'TextArea'}">
                                    <div class="form-group">
                                        <label for="textAreaField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField id="textAreaField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;resize:none;"/>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'LongTextArea'}">
                                    <div class="form-group">
                                        <label for="longTextAreaField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField id="longTextAreaField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;resize:none;"/>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>


                                <apex:outputPanel rendered="{!question.fieldType == 'URL'}">
                                    <div class="form-group">
                                        <label for="urlField1">{!question.label}{!if(CONTAINS(question.question.Required__c,question.application.Application_Status__c) && !ISBLANK(question.question.Required__c),'*','')}</label>
                                        <apex:inputField id="urlField1" value="{!group.newReferenceObject[question.question.Related_Object_Field__c]}" styleClass="form-control {!question.question.Id} {!if(question.isEditable && group.isEditable && !preventUpdates,'','fieldNotEditable')}" style="font-family:'Open Sans', sans-serif;color:#{!appControl.Text_Color__c};font-weight:400;font-size:14px;height:36px;"/>
                                        <p class="help-block" style="{!IF(question.helpText != null && !ISBLANK(question.helpText), '', 'display:none;')}">
                                            <apex:outputText value="{!question.helpText}" escape="false"/>
                                        </p>
                                    </div>
                                </apex:outputPanel>

                                <!-- SLDS help text -->
                                <apex:outputPanel rendered="{!IF(question.helpText != null && !ISBLANK(question.helpText), true, false)}" styleClass="slds-text-body_regular slds-p-bottom_medium">
                                    <p>
                                        <apex:outputText value="{!question.helpText}" escape="false"/>
                                    </p>
                                </apex:outputPanel>
                            </div>

                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:repeat>

                <apex:commandLink styleClass="slds-button" action="{!group.addNewReferenceObject}" value="Create" reRender="theSection"/>
                <apex:commandLink styleClass="slds-button" immediate="true" value="Cancel" reRender="theSection">
                    <apex:param value="false" assignTo="{!group.creatingNewRelatedRecord}" name="p1"/>
                </apex:commandLink>
            </apex:outputPanel>
        </apex:outputPanel>

    </apex:outputPanel>

</apex:component>