<apex:page controller="ApplicationAdminView" action="{!ApplicationAdminViewInit}" showHeader="false" applyHtmlTag="false" lightningStyleSheets="true" cache="false" standardStylesheets="false" docType="html-5.0">
    <apex:composition template="GeneralSLDS">

        <apex:define name="scriptsHead">
            <script>
                async function lookupSearchJS(sObj, sObjFilter, sObjNameField, searchTerm) {
                    return new Promise((resolve, reject) => {
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.ApplicationAdminView.lookupSearch}',
                            sObj, sObjFilter, sObjNameField, searchTerm,
                            (result, event) => {
                                event.status ? resolve(result) : reject(event.message);
                            },
                            {escape: true}
                        );
                    });
                }
            </script>
            <c:ApplicationHead/>
        </apex:define>
        <apex:define name="metaPageTitle">Application Admin View</apex:define>

        <apex:define name="body">

            <h1 style="">Application Admin View</h1>

            <div id="loadSpinner" class="popupBackground">
                <div id="loading" class="PopupPanel">
                    <div class="background"></div>
                    <span style="font-family: Arial, Helvetica, sans-serif; font-size: 12px;">Please Wait..</span>
                </div>
            </div>

            <section role="dialog" tabindex="-1" aria-modal="true" class="slds-modal slds-backdrop_open slds-backdrop" id="form-spinner" style="display:none">
                <div role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand">
                    <span class="slds-assistive-text">Loading</span>
                    <div class="slds-spinner__dot-a"></div>
                    <div class="slds-spinner__dot-b"></div>
                </div>
            </section>

            <apex:outputPanel id="themessages">
                <apex:pageMessages/>
            </apex:outputPanel>

            <apex:form id="application">

                <apex:actionFunction name="saveWithDocs" action="{!submit}" reRender="formPageMessages" oncomplete="appHideLoadingSpinner();">
                    <apex:param name="p1" value="" assignTo="{!additionalDataString}"/>
                </apex:actionFunction>

                <apex:commandLink id="reRenderGroups" value="" style="display:none;" action="{!pushValuesToObjects}" onComplete="pageLoadReRendered();" reRender="{!$Component.groupRepeat.theFormSectionComponent.applicationFormSectionComponent.questionGroupWrapper}"/>
                <apex:commandLink id="reRenderTheTable" value="" style="display:none;" action="{!pushValuesToObjects}" onComplete="pageLoadReRendered();" reRender="{!$Component.groupRepeat.theFormSectionComponent.applicationFormSectionComponent.theTable}"/>

                <apex:repeat value="{!arLst}" var="req" id="groupRepeat">
                    <apex:repeat value="{!req.section.groups}" var="g" rendered="{!req.section.groups != null && req.section.groups.size > 0}">
                        <c:ApplicationFormSection id="theFormSectionComponent" groupNewRelatedRecord="{!g.createNewReferenceObject}" group="{!g}" preventUpdates="false" appInfo="{!appInfo}"/>
                    </apex:repeat>
                </apex:repeat>

                <apex:outputLink styleClass="slds-button_brand" value="/{!applicationId}">Back to Application</apex:outputLink>

                <apex:outputLink styleClass="slds-button_brand" onclick="performDocUploadSave();appShowLoadingSpinner();">Save</apex:outputLink>

            </apex:form>

            <br/>
            <br/>
        </apex:define>
    </apex:composition>
</apex:page>